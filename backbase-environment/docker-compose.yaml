# https://docs.docker.com/compose/compose-file/

x-discovery-variables: &discovery-variables
  server.shutdown: graceful
  server.forward-headers-strategy: framework
  spring.cloud.kubernetes.enabled: false
  eureka.instance.initialStatus: STARTING
  eureka.instance.non-secure-port: 8080
  eureka.instance.prefer-ip-address: true
  eureka.client.healthcheck.enabled: true
  eureka.client.serviceUrl.defaultZone: http://registry:8080/eureka
  eureka.client.registry-fetch-interval-seconds: 15
  eureka.client.instance-info-replication-interval-seconds: 15

x-common-variables: &common-variables
  <<: *discovery-variables
  JAVA_TOOL_OPTIONS: -XX:MaxRAMPercentage=60.0
  SIG_SECRET_KEY: JWTSecretKeyDontUseInProduction!
  USERCTX_KEY: JWTSecretKeyDontUseInProduction!
  logging.level.com.backbase: DEBUG
  logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
  management.endpoints.web.exposure.include: '*'
  management.endpoints.enabled-by-default: true
  management.security.roles: ANONYMOUS,ACTUATOR,USER
  spring.main.banner-mode: off
  spring.zipkin.enabled: false
  spring.cloud.config.enabled: false
  spring.cloud.kubernetes.enabled: false
  backbase.audit.enabled: false
  backbase.security.public.paths: /integration-api/**
  backbase.security.mtls.enabled: false

x-database-variables: &database-variables
  logging.level.liquibase: INFO
  spring.liquibase.enabled: true
  spring.datasource.username: root
  spring.datasource.password: root
  spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
  spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQL8Dialect

x-message-broker-variables: &message-broker-variables
  spring.activemq.broker-url: tcp://activemq:61616
  spring.activemq.user: admin
  spring.activemq.password: admin

x-healthcheck-defaults: &healthcheck-defaults
  start_period: 60s
  interval: 15s
  timeout: 5s
  retries: 10

x-resources-limits-defaults: &resources-limits-defaults
  resources:
    limits:
      memory: 512M

name: mastercard-openbanking

volumes:
  mcob_mysql_data:
    driver: local

networks:
  default:
    name: mcob_default

secrets:
  npm:
    file: ${HOME}/.npmrc

services:
  mysql:
    container_name: mcob_mysql
    image: mysql:8.0.31
    deploy:
      resources:
        limits:
          memory: 1024M
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mcob_mysql_data:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping --silent
      interval: 10s
      timeout: 5s
      retries: 5

  activemq:
    container_name: mcob_activemq
    image: symptoma/activemq:5.17.3
    deploy:
      <<: *resources-limits-defaults
    ports:
      - "61616:61616"
      - "8161:8161"
    healthcheck:
      test: /opt/activemq/bin/activemq query --objname type=Broker,brokerName=*,service=Health | grep Good
      interval: 10s
      timeout: 5s
      retries: 5

  spring-boot-admin:
    container_name: mcob_spring_boot_admin
    image: backbasecs/spring-boot-admin-server
    deploy:
      <<: *resources-limits-defaults
    profiles:
      - monitoring
    ports:
      - "9080:8080"
    environment:
      <<: *discovery-variables
      eureka.client.enabled: true
      spring.cloud.discovery.client.simple.instances.backbase-identity[0].uri: http://backbase-identity:8080
      spring.cloud.discovery.client.simple.instances.backbase-identity[0].metadata.management.context-path: /auth/q
      spring.cloud.discovery.client.simple.instances.backbase-identity[0].metadata.health.path: health
      spring.cloud.discovery.client.simple.instances.authorization-server[0].uri: http://authorization-server:8080

  registry:
    container_name: mcob_registry
    image: repo.backbase.com/backbase-docker-releases/registry:${BB_VERSION}
    deploy:
      <<: *resources-limits-defaults
    ports:
      - "8761:8080"
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java" ]

  edge:
    container_name: mcob_edge
    image: repo.backbase.com/backbase-docker-releases/edge:${BB_VERSION}
    deploy:
      <<: *resources-limits-defaults
    ports:
      - "8280:8080"
    environment:
      <<: *common-variables
      gateway.actuator.security.enabled: false
      gateway.csrf.enabled: false
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java", "http://registry:8080/eureka/apps/edge", "<status>UP</status>" ]
    links:
      - registry
      - token-converter

  token-converter:
    container_name: mcob_token_converter
    image: repo.backbase.com/backbase-docker-releases/oidc-token-converter-service:${BB_VERSION}
    deploy:
      <<: *resources-limits-defaults
    environment:
      <<: *common-variables
      backbase.oidc-token-converter.whitelistedDomains[0].internalHostScheme: http
      backbase.oidc-token-converter.whitelistedDomains[0].internalHost: backbase-identity:8080
      backbase.oidc-token-converter.whitelistedDomains[0].issuerHost: localhost
      backbase.oidc-token-converter.whitelistedDomains[1].internalHostScheme: http
      backbase.oidc-token-converter.whitelistedDomains[1].internalHost: backbase-identity:8080
      backbase.oidc-token-converter.whitelistedDomains[1].issuerHost: host.docker.internal
      backbase.oidc-token-converter.force-jwks-verification-given-matching-claims: true
      backbase.token-converter.verify-only-no-internal-token: true
      backbase.token-converter.claimsMapping[0].external: consentId
      backbase.token-converter.claimsMapping[0].internal: consentId
      backbase.token-converter.claimsMapping[1].external: aspspId
      backbase.token-converter.claimsMapping[1].internal: aspspId
      backbase.token-converter.claimsMapping[2].external: tid
      backbase.token-converter.claimsMapping[2].internal: tid
      backbase.token-converter.claimsMapping[3].external: act
      backbase.token-converter.claimsMapping[3].internal: act
      backbase.token-converter.claimsMapping[4].external: internal_scope
      backbase.token-converter.claimsMapping[4].internal: scope
      backbase.token-converter.claimsMapping[5].external: session_state
      backbase.token-converter.claimsMapping[5].internal: session_id
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java", "http://registry:8080/eureka/apps/token-converter", "<status>UP</status>" ]
    links:
      - registry

  web-authentication:
    container_name: mcob_web_authentication
    image: repo.backbase.com/backbase-docker-releases/web-authentication:${BB_VERSION}
    deploy:
      <<: *resources-limits-defaults
    environment:
      <<: [ *common-variables, *message-broker-variables, *database-variables ]
      spring.datasource.url: jdbc:mysql://mysql:3306/web-authentication?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
      spring.cloud.discovery.client.simple.instances.communication[0].uri: http://wiremock:8001
      spring.cloud.discovery.client.simple.instances.contentservices[0].uri: http://wiremock:8002
      backbase.authenticators.channels.sms: true
      backbase.authenticators.otp.fromSms: 123456789
      backbase.authenticators.otp.fromEmail: test@backbase.com
      backbase.contentservices.otpPlaceholder: otp
      backbase.contentservices.body.objectPath: objectPath
      backbase.contentservices.body.repositoryId: repositoryId
      backbase.pushnotification.pushToAppName: none
      backbase.pushnotification.pushTitleConfig.objectPath: none
      backbase.pushnotification.pushBodyConfig.objectPath: none
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java", "http://registry:8080/eureka/apps/web-authentication", "<status>UP</status>" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - activemq
      - registry

  backbase-identity:
    container_name: mcob_backbase_identity
    image: repo.backbase.com/backbase-docker-releases/backbase-identity:${BB_VERSION}
    deploy:
      resources:
        limits:
          memory: 1024M
    ports:
      - '8180:8080'
    environment:
      QUARKUS_DATASOURCE_URL: "jdbc:mysql://mysql:3306/backbase_identity?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true"
      QUARKUS_DATASOURCE_USERNAME: "root"
      QUARKUS_DATASOURCE_PASSWORD: "root"
      QUARKUS_DATASOURCE_DRIVER: "com.mysql.cj.jdbc.Driver"
      QUARKUS_LOG_FILE_ENABLE: "false"
      QUARKUS_LOG_LEVEL: "INFO"
      QUARKUS_LOG_CONSOLE_FORMAT: "%d{yyy:MM:dd HH:mm:ss.SSS} %-5p [%X{traceId},%X{spanId},%X{sampled}] %i --- [%t] %c{2.} : %m%n"
      QUARKUS_JAEGER_PROPAGATION: "b3"
      QUARKUS_HTTP_CORS: "true"
      QUARKUS_HTTP_CORS_EXPOSED_HEADERS: "Location"
      QUARKUS_HTTP_CORS_ORIGINS: "http://localhost:7070,http://localhost:9090,http://localhost:8080,http://localhost:4200"
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "admin"
      KEYCLOAK_HOME_DIR: "/"
      KEYCLOAK_CONNECTIONSJPA_QUARKUS_INITIALIZEEMPTY: "true"
      KEYCLOAK_CONNECTIONSJPA_QUARKUS_MIGRATIONSTRATEGY: "update"
      KEYCLOAK_BACKBASE_OIDC_TOKEN_CONVERTER_URL: "http://token-converter:8080"
      KEYCLOAK_BACKBASE_CONFIRMATION_URL: "http://confirmation:8080"
      KEYCLOAK_BACKBASE_WEB_AUTHENTICATION_URL: "http://web-authentication:8080"
      KEYCLOAK_BACKBASE_COMMUNICATION_URL: "http://wiremock:8001/service-api/v1/communications/batches"
      KEYCLOAK_BACKBASE_STEP_UP_MASTERCARD_NAME: "mastercard"
      KEYCLOAK_BACKBASE_STEP_UP_MASTERCARD_CLIENTS_WEB_NAME: "bb-web-client"
      KEYCLOAK_BACKBASE_STEP_UP_MASTERCARD_CLIENTS_WEB_ACR_VALUES_GOLD_ACR: "gold"
      KEYCLOAK_BACKBASE_STEP_UP_MASTERCARD_CLIENTS_WEB_ACR_VALUES_GOLD_PRIORITY: "1"
      KEYCLOAK_BACKBASE_STEP_UP_MASTERCARD_CLIENTS_WEB_ACR_VALUES_GOLD_DEFAULT: "bb-su:gold"
      KEYCLOAK_BACKBASE_STEP_UP_MASTERCARD_CLIENTS_WEB_ACR_VALUES_GOLD_PERMISSIBLE_SINGLE: "bb-su:update-user-profile"
      keycloak.hostname.default.frontendUrl: "http://localhost:8180/auth"
      JAVA_TOOL_OPTIONS: "-XX:MaxRAMPercentage=60.0 -Dkeycloak.migration.strategy=IGNORE_EXISTING -Dkeycloak.migration.action=import -Dkeycloak.profile.feature.upload_scripts=enabled -Dquarkus.log.category.'\"org.keycloak.url\"'.level=DEBUG -Dquarkus.log.category.'\"org.keycloak.protocol.oidc\"'.level=TRACE -Dquarkus.log.category.'\"org.keycloak.broker\"'.level=TRACE -Dquarkus.log.category.'\"com.backbase\"'.level=DEBUG -Dquarkus.log.category.'\"org.keycloak.services.managers\"'.level=DEBUG"
    volumes:
      - ./config/identity:/tmp/keycloak-export
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java", "http://localhost:8080/auth/realms/backbase/.well-known/openid-configuration", "backbase" ]
    depends_on:
      mysql:
        condition: service_healthy

  access-control:
    container_name: mcob_access_control
    image: repo.backbase.com/backbase-docker-releases/access-control:${BB_VERSION}
    deploy:
      resources:
        limits:
          memory: 1024M
    environment:
      <<: [ *common-variables, *message-broker-variables, *database-variables ]
      spring.datasource.url: jdbc:mysql://mysql:3306/access-control?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java", "http://registry:8080/eureka/apps/access-control", "<status>UP</status>" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - activemq
      - registry

  arrangement-manager:
    container_name: mcob_arrangement_manager
    image: repo.backbase.com/backbase-docker-releases/arrangement-manager:${BB_VERSION}
    deploy:
      resources:
        limits:
          memory: 1024M
    environment:
      <<: [ *common-variables, *message-broker-variables, *database-variables ]
      spring.datasource.url: jdbc:mysql://mysql:3306/arrangement-manager?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
      backbase.communication.services.account.integration.service-id: mastercard-integration-service
#      spring.cloud.discovery.client.simple.instances.account-integration-service[0].uri: http://host.docker.internal:9999
      backbase.arrangement.pull-latest-balance: true
      logging.level.com.backbase.products.contexts: INFO
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java", "http://registry:8080/eureka/apps/arrangement-manager", "<status>UP</status>" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - activemq
      - registry

  mastercard-integration-service:
    container_name: mcob_mastercard_integration_service
    image: harbor.backbase.eu/development/mastercard-integration-service:1.3.0
    deploy:
      <<: *resources-limits-defaults
    environment:
      <<: *common-variables
      mastercard.mcob.api.base-uri: https://developer.mastercard.com/apigwproxy/openbanking/connect/api
      mastercard.mcob.api.proxy.enabled: false
      mastercard.mcob.api.proxy.host: wiremock
      mastercard.mcob.api.proxy.port: 8080
      eureka.instance.metadataMap.public: false
      server.forward-headers-strategy: native
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
      - ./certs/wiremock/cacerts:/etc/ssl/certs/java/cacerts
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java", "http://registry:8080/eureka/apps/mastercard-integration-service", "<status>UP</status>" ]
    links:
      - registry

  authorization-server:
    container_name: mcob_authorization_server
    image: harbor.backbase.eu/development/authorization-server:1.5.1
    deploy:
      <<: *resources-limits-defaults
    ports:
      - "8081:8080"
    environment:
      mastercard.mcob.api.base-uri: https://developer.mastercard.com/apigwproxy/openbanking/connect/api
      mastercard.mcob.ais.aspsps[0].id: 420e5cff-0e2a-4156-991a-f6eeef0478cf
      mastercard.mcob.ais.aspsps[0].available-consents[0].user.username: sara
      mastercard.mcob.ais.aspsps[0].available-consents[0].user.roles: USER
      mastercard.mcob.ais.aspsps[1].id: 6bc896b5-1b5a-473a-a1d8-dfd3aaa4fab5
      mastercard.mcob.ais.aspsps[1].consent-validity: P2D
      mastercard.mcob.ais.aspsps[1].available-consents[0].user.username: bob
      mastercard.mcob.ais.aspsps[1].available-consents[0].user.roles: USER
      management.endpoints.web.exposure.include: '*'
      management.endpoints.enabled-by-default: true
      security.authorization.public-paths: /actuator/**
      security.authorization.code-flow.permissive-redirect: true
      security.authorization.client-registration.keycloak-broker-client.secret: "{noop}secret"
      security.authorization.client-registration.keycloak-broker-client.client-authentication-methods: client_secret_basic
      security.authorization.client-registration.keycloak-broker-client.authorization-grant-types: client_credentials,authorization_code,refresh_token
      security.authorization.client-registration.keycloak-broker-client.redirect-uris: http://localhost:8180/auth/realms/mastercard/broker/mastercard/endpoint
      security.authorization.client-registration.keycloak-broker-client.scopes: openid,profile
      security.authorization.client-registration.keycloak-broker-client.token-configuration[settings.token.claim-mappers][0].attributeName: aspspId
      security.authorization.client-registration.keycloak-broker-client.token-configuration[settings.token.claim-mappers][0].toAccessToken: true
      security.authorization.client-registration.keycloak-broker-client.token-configuration[settings.token.claim-mappers][1].attributeName: consentId
      security.authorization.client-registration.keycloak-broker-client.token-configuration[settings.token.claim-mappers][1].toAccessToken: true
      security.authorization.client-registration.keycloak-broker-client.token-configuration[settings.token.claim-mappers][2].attributeName: preferred_username
      security.authorization.client-registration.keycloak-broker-client.token-configuration[settings.token.claim-mappers][2].toIdToken: true
      logging.level.com.backbase: DEBUG
      logging.level.org.springframework.security: TRACE
    healthcheck:
      <<: *healthcheck-defaults
      test: curl --connect-timeout 5 http://localhost:8080/.well-known/openid-configuration

  user-manager:
    container_name: mcob_user_manager
    image: repo.backbase.com/backbase-docker-releases/user-manager:${BB_VERSION}
    deploy:
      resources:
        limits:
          memory: 1024M
    environment:
      <<: [ *common-variables, *message-broker-variables, *database-variables ]
      spring.datasource.url: jdbc:mysql://mysql:3306/user-manager?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
      backbase.users.identity-endpoints-enabled: true
      backbase.users.identity-integration-enabled: true
      backbase.users.sync-primary-to-identity-enabled: true
      spring.cloud.discovery.client.simple.instances.user-integration-outbound-service[0].uri: http://wiremock:8000
      backbase.security.deny-all: false
      backbase.security.rules-enabled: true
      backbase.security.rules.update-user-profile.to[0].methods: POST
      backbase.security.rules.update-user-profile.to[0].paths: /client-api/v2/users/me/profile/electronic-addresses
      backbase.security.rules.update-user-profile.to[1].methods: PUT
      backbase.security.rules.update-user-profile.to[1].paths: /client-api/v2/users/me/profile/electronic-addresses/*
      backbase.security.rules.update-user-profile.to[2].methods: DELETE
      backbase.security.rules.update-user-profile.to[2].paths: /client-api/v2/users/me/profile/electronic-addresses/*
      backbase.security.rules.update-user-profile.when.values: bb-su:update-user-profile
      backbase.security.rules.update-user-profile.when.match: ALL
      backbase.security.rules.update-user-profile.step-up.acr-values: gold
      backbase.security.rules.update-user-profile.token: CLIENT
      backbase.security.rules.update-user-profile.order: 1
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java", "http://registry:8080/eureka/apps/user-manager", "<status>UP</status>" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - activemq
      - registry

  identity-integration-service:
    container_name: mcob_identity_integration_service
    image: repo.backbase.com/backbase-docker-releases/identity-integration-service:${BB_VERSION}
    deploy:
      <<: *resources-limits-defaults
    environment:
      <<: *common-variables
      identity.serverUrl: http://backbase-identity:8080/auth
      identity.masterAdmin.username: admin
      identity.masterAdmin.password: admin
      identity.realmConfiguration.fallbackOptions.enableUser: true
      identity.realmConfiguration.fallbackOptions.useTemporaryPassword: true
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java", "http://registry:8080/eureka/apps/identity-integration-service", "<status>UP</status>" ]
    links:
      - registry

  confirmation:
    container_name: mcob_confirmation
    image: repo.backbase.com/backbase-docker-releases/confirmation:${BB_VERSION}
    deploy:
      resources:
        limits:
          memory: 1024M
    environment:
      <<: [ *common-variables, *message-broker-variables, *database-variables ]
      spring.datasource.url: jdbc:mysql://mysql:3306/confirmation?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-Xmx3M", "-Xmx5M", "/tmp/HealthCheck.java", "http://registry:8080/eureka/apps/confirmation", "<status>UP</status>" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - activemq
      - registry

  payment-order-service:
    container_name: mcob_payment_order_service
    image: repo.backbase.com/backbase-docker-releases/payment-order-service:${BB_VERSION}
    deploy:
      resources:
        limits:
          memory: 1024M
    environment:
      <<: [ *common-variables, *message-broker-variables, *database-variables ]
      spring.datasource.url: jdbc:mysql://mysql:3306/payment-order-service?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
      backbase.communication.services.dbs.integration.external.outbound.paymentorder.service-id: mastercard-integration-service
#      spring.cloud.discovery.client.simple.instances.payment-order-integration-service[0].uri: http://host.docker.internal:9999
      backbase.payments.limits.enabled: false
      backbase.payments.types.FASTER_PAYMENT.business-function: UK Faster Payments
      backbase.payments.types.FASTER_PAYMENT.validation.rules: non-zero-transaction
      backbase.payments.types.INTERNAL_TRANSFER.confirmation.enabled: true
      spring.profiles.include: backbase_universal_retail
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java", "http://registry:8080/eureka/apps/payment-order-service", "<status>UP</status>" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - activemq
      - registry

  payment-order-options:
    container_name: mcob_payment_order_options
    image: repo.backbase.com/backbase-docker-releases/payment-order-options:${BB_VERSION}
    deploy:
      <<: *resources-limits-defaults
    environment:
      <<: [ *common-variables, *message-broker-variables ]
      spring.profiles.include: uk
      backbase.payments.types.location: "file:/tmp/payment-config/payment-types-uk.yml"
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
      - ./config/payments:/tmp/payment-config
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java", "http://registry:8080/eureka/apps/payment-order-options", "<status>UP</status>" ]
    links:
      - activemq
      - registry

  contact-manager:
    container_name: mcob_contact_manager
    image: repo.backbase.com/backbase-docker-releases/contact-manager:${BB_VERSION}
    deploy:
      resources:
        limits:
          memory: 1024M
    environment:
      <<: [ *common-variables, *message-broker-variables, *database-variables ]
      spring.datasource.url: jdbc:mysql://mysql:3306/contact-manager?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java", "http://registry:8080/eureka/apps/contact-manager", "<status>UP</status>" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - activemq
      - registry

  product-catalog-task:
    container_name: mcob_product_catalog_task
    image: repo.backbase.com/backbase-stream-images/product-catalog-task:${STREAM_VERSION}
    profiles:
      - bootstrap
    environment:
      <<: *common-variables
      spring.config.additional-location: file:/tmp/ingestion.yml
    volumes:
      - ./config/stream/ingestion.yml:/tmp/ingestion.yml
    depends_on:
      token-converter:
        condition: service_healthy
      arrangement-manager:
        condition: service_healthy

  legal-entity-bootstrap-task:
    container_name: mcob_legal_entity_bootstrap_task
    image: repo.backbase.com/backbase-stream-images/legal-entity-bootstrap-task:${STREAM_VERSION}
    profiles:
      - bootstrap
    environment:
      <<: *common-variables
      backbase.stream.legalentity.sink.useIdentityIntegration: true
      spring.config.additional-location: file:/tmp/ingestion.yml
    volumes:
      - ./config/stream/ingestion.yml:/tmp/ingestion.yml
    depends_on:
      token-converter:
        condition: service_healthy
      access-control:
        condition: service_healthy
      arrangement-manager:
        condition: service_healthy
      user-manager:
        condition: service_healthy
      identity-integration-service:
        condition: service_healthy
      backbase-identity:
        condition: service_healthy
      product-catalog-task:
        condition: service_completed_successfully

  employee-app:
    container_name: mcob_employee_app
    image: harbor.backbase.eu/development/employee-essentials:2023.01
    platform: linux/amd64
    deploy:
      resources:
        limits:
          memory: 64M
    build:
      context: images/employee-essentials
      secrets:
        - npm
    environment:
      AUTH_URL: http://localhost:8180/auth/
      API_ROOT: http://localhost:9090/api/
      PORT: 9090
    ports:
      - "9090:9090"
    volumes:
      - ./nginx/api.conf:/nginx-config/server/15-api.conf
    healthcheck:
      disable: true
    links:
      - edge

  business-app:
    container_name: mcob_business_app
    image: harbor.backbase.eu/development/business-universal:2023.02-LTS
    platform: linux/amd64
    deploy:
      resources:
        limits:
          memory: 64M
    build:
      context: images/business-universal
      secrets:
        - npm
    environment:
      API_ROOT: http://localhost:7070/api/
      AUTH_URL: http://localhost:8180/auth/realms/mastercard
      PORT: 7070
    ports:
      - "7070:7070"
    volumes:
      - ./nginx/api.conf:/nginx-config/server/15-api.conf
    healthcheck:
      disable: true
    links:
      - edge

  wiremock:
    container_name: mcob_wiremock
    image: up9inc/wiremock-studio
    ports:
      - "9000:9000"
      - "8000-8079:8000-8079"
    command:
      - --verbose
    volumes:
      - ./certs/wiremock/ca-cert.jks:/root/.wiremock/ca-keystore.jks
      - ./stubs:/home/wiremock
